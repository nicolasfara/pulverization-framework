name: CI/CD Pipeline

on:
  workflow_call:
  workflow_dispatch:

env:
  JDK_DISTRIUTION: temurin
  JDK_VERSION: 17.0.4

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu, macos, windows ]
    runs-on: ${{ matrix.os }}-latest
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    services:
      rabbitmq:
        image: 'rabbitmq:3-alpine'
        ports:
          - 5672:5672
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.1.0
      - name: Setup Java
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JDK_DISTRIUTION }}
          java-version: ${{ env.JDK_VERSION }}
          cache: gradle
      - name: Run assemble and check tasks
        run: |
          ./gradlew assemble --parallel
          ./gradlew check --parallel
      - name: Upload code coverage result
        if: ${{ runner.os == 'Linux' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/kover/merged/xml/report.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true

  release:
    concurrency:
      group: release
    needs: [ build ]
    runs-on: ubuntu-latest
    # Prevent the release job if the run is on a PR or a fork
    if: >-
      !github.event.repository.fork
      && (github.event_name != 'pull_request' ||
        github.event.pull_request.head.repo.full_name == github.repository
      )
      && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}
      - name: Setup Java
        uses: actions/setup-java@v3.6.0
        with:
          distribution: ${{ env.JDK_DISTRIUTION }}
          java-version: ${{ env.JDK_VERSION }}
          server-id: ossrh
          server-username: MAVEN_CENTRAL_USERNAME
          server-password: MAVEN_CENTRAL_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATEKEY }}
          gpg-passphrase: GPG_PASSPHRASE
          cache: gradle
      - name: Release artifacts
        run: |
          npm install
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATEKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}

  success:
    runs-on: ubuntu-latest
    needs:
      - release
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
